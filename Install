#!/bin/bash
source ./Configuration

printf "\nInstall Type = $INSTALL_TYPE\n"

printf "\nCleaning up old Install files if needed\n"
./clean yes

printf "\nCreating log directory\n"
mkdir -p $LOG_DIR

printf "\nSetting up new local virtual environment using python located in $PYTHON\n"
# set up virtual environment
$PYTHON virtualenv.py -p $PYTHON .

printf "\nsourcing the new virtual environment."
printf "\nTo use this installation in the future, you will need to call source bin/activate\n"
source bin/activate

printf "\nInstalling psycopg2\n"
easy_install psycopg2

printf "\nInstalling SQL Alchemy\n"

easy_install sqlalchemy==0.9.9

printf "\nInstalling Flask\n" 
easy_install Flask

printf "\nInstalling Flask-SQLAlchemy extension\n" 
easy_install Flask-SQLAlchemy

printf "\nInstalling Flask-Admin extension\n"
easy_install Flask-Admin

printf "\nInstalling WT Forms extension\n" 
easy_install wtforms

printf "\nInstalling CherryPy WSGI server \n"
easy_install cherrypy

printf "\nSoftware Install completed\n"


# Do extra steps if we are building for production or test
#if [ "$INSTALL_TYPE" == "prod" ] || [ "$INSTALL_TYPE" == "test" ]; then
#
#	printf "\n$INSTALL_TYPE environment detected...\n"
#	source bin/activate
#	source Configuration
#	cd admin

#	# run acceptance tests on test environment to make sure this
#	# version of code doesn't break anything
#	if [ "$INSTALL_TYPE" == "test" ]; then
#	
#		printf "\nRunning Acceptance Tests\n"
#		./runAcceptanceTests
#		if [ $? -ne 0 ]; then
#			echo "Acceptance Tests Failed"
#			exit 1
#		fi

#	fi

#	printf "\nRestarting Server\n"
#	./restartserver.sh

#fi
