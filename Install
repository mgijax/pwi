#!/bin/bash
source ./Configuration

printf "\nInstall Type = $INSTALL_TYPE\n"

printf "\nCleaning up old Install files if needed\n"
./clean yes

printf "\nCreating log directory\n"
mkdir -p $LOG_DIR

printf "\nSetting up new local virtual environment using python located in $PYTHON\n"
# set up virtual environment
$PYTHON virtualenv.py -p $PYTHON .

printf "\nsourcing the new virtual environment."
printf "\nTo use this installation in the future, you will need to call source bin/activate\n"
source bin/activate

printf "\nInstalling psycopg2\n"
easy_install psycopg2

printf "\nInstalling SQL Alchemy\n"
easy_install sqlalchemy==0.9.8

printf "\nInstalling Flask\n" 
easy_install Flask

printf "\nInstalling Flask-SQLAlchemy extension\n" 
easy_install Flask-SQLAlchemy

printf "\nInstalling Flask-Admin extension\n"
easy_install Flask-Admin

printf "\nInstalling WT Forms extension\n" 
easy_install wtforms

printf "\nInstalling CherryPy WSGI server \n"
easy_install cherrypy

printf "\nInstalling modules from source\n"
cd $PWI/modules

# Begin by installing unixODBC locally
printf "\nInstalling unixODBC from source\n"
tar -zxvf unixODBC-2.3.1.tar.gz
cd unixODBC-2.3.1
./configure --prefix=$UNIXODBC_DIR --sysconfdir=$UNIXODBC_DIR
make
make install
cd ..

# now install freeTDS with odbc driver locally
printf "\nInstalling freeTDS from source\n"
tar -zxvf freetds-stable.tgz
cd freetds-0.91
./configure --prefix=$FREETDS_DIR --with-unixodbc=$UNIXODBC_DIR
make
make install
cd ..

# set up unixODBC drivers and datasources
printf "\nInstalling unixODBC driver and datasources\n"
TDSLIB=$FREETDS_DIR
sed -e "s@###FREETDS_DIR###@$TDSLIB@g" $PWI/tdsconf/tds.driver.template > $UNIXODBC_DIR/tds.driver.template

cp $PWI/tdsconf/tds.datasource.template $UNIXODBC_DIR/
cd $UNIXODBC_DIR/bin
./odbcinst -i -d -f ../tds.driver.template
./odbcinst -i -s -f ../tds.datasource.template
cd $PWI/modules

# install pyodbc driver while pointing to the previously installed libs
printf "\nInstalling pyodbc from source\n"
unzip -o pyodbc-3.0.3-sybase12-mod.zip 
cd pyodbc-3.0.3
# set up library links for c++ and python
LD_LIBRARY_PATH=$UNIXODBC_DIR/lib:$FREETDS_DIR/lib
export LD_LIBRARY_PATH
LIBRARY_PATH=$LD_LIBRARY_PATH
export LIBRARY_PATH
CPLUS_INCLUDE_PATH=$UNIXODBC_DIR/include:$FREETDS_DIR/include
export CPLUS_INCLUDE_PATH
python setup.py build
python setup.py install
cd $PWI


printf "\nTesting python-sybase installation\n"
./admin/testSybaseInstall.py

printf "\nSoftware Install completed\n"


# Do extra steps if we are building for production or test
#if [ "$INSTALL_TYPE" == "prod" ] || [ "$INSTALL_TYPE" == "test" ]; then
#
#	printf "\n$INSTALL_TYPE environment detected...\n"
#	source bin/activate
#	source Configuration
#	cd admin

#	# run acceptance tests on test environment to make sure this
#	# version of code doesn't break anything
#	if [ "$INSTALL_TYPE" == "test" ]; then
#	
#		printf "\nRunning Acceptance Tests\n"
#		./runAcceptanceTests
#		if [ $? -ne 0 ]; then
#			echo "Acceptance Tests Failed"
#			exit 1
#		fi

#	fi

#	printf "\nRestarting Server\n"
#	./restartserver.sh

#fi
